/*
 * Copyright 2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

evaluationDependsOn ":distributions"
evaluationDependsOn ":docs"

task intTestImage(type: Sync) {
    group = "Verification"
    into file("$buildDir/integ test")
}

if (useAllDistribution) {
    def allZip = tasks.getByPath(':distributions:allZip')
    task unpackAllDistribution(type: Sync) {
        dependsOn allZip
        from { zipTree(allZip.archivePath) }
        into "$buildDir/tmp/unpacked-all-distribution"
    }

    // Compensate for the top level dir in the zip
    def unpackedPath = "$unpackAllDistribution.destinationDir/gradle-${version}"

    intTestImage {
        dependsOn unpackAllDistribution
        from(unpackedPath)
    }
} else {
    intTestImage {
        with project(":distributions").binDistImage
        into "samples", {
            from { project(":docs").outputs.samples }
        }
        doLast { task ->
            ant.chmod(dir: "$destinationDir/bin", perm: "ugo+rx", includes: "**/*")
        }
    }
}
